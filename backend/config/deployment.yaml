#@ load("@ytt:data", "data")

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend
  namespace: #@ data.values.backend.namespace
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/instance: backend
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: #@ data.values.backend.namespace
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/instance: backend
spec:
  type: ClusterIP
  ports:
    - port: #@ data.values.backend.port
      targetPort: #@ data.values.backend.port
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: backend
    app.kubernetes.io/instance: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: #@ data.values.backend.namespace
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/instance: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: backend
      app.kubernetes.io/instance: backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: backend
        app.kubernetes.io/instance: backend
    spec:
      serviceAccountName: backend
      securityContext:
        {}
      containers:
        - name: backend
          securityContext:
            {}
          image: backend-image
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: #@ data.values.backend.port
              protocol: TCP
          env:
            - name: PORT
              value: #@ str(data.values.backend.port)
            - name: STORAGE_ADDRESS
              value: #@ data.values.storage.address + ":" + str(data.values.storage.port)
          resources:
            {}
