---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend
  labels:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: frontend
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: frontend
spec:
  type: NodePort
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: frontend
      app.kubernetes.io/instance: frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frontend
        app.kubernetes.io/instance: frontend
    spec:
      serviceAccountName: frontend
      securityContext:
        {}
      containers:
        - name: frontend
          securityContext:
            {}
          image: ghcr.io/joaopapereira/demo-intro-carvel/frontend@sha256:9f7bbe91294c925cbba1bed75fe0e7cdf989ed9a39a3c0210aa09743e94992c8
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              protocol: TCP
              name: http
          env:
            - name: BACKEND_ADDRESS
              value: backend.default.svc.cluster.local:8080
          resources:
            {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: message.board.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 8080
